@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SFA.DAS.Aan.SharedUi.Infrastructure;
@using SFA.DAS.Aan.SharedUi.Models.NetworkEvents;
@addTagHelper*, Microsoft.AspNetCore.Mvc.TagHelpers

@model NetworkEventsViewModel
@{
    ViewData["Title"] = "Search Network Events";

    var totalCountDescription = $"{Model.TotalCount} results";
    if (Model.TotalCount == 1)
    {
        totalCountDescription = "1 result";
    }
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-5">Search network events</h1>
        <p>All events listed on this page are relevant to your profile preferences. You can use filters to narrow your search parameters further and find the most suitable events from within your preferred options. </p>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">
        <div class="das-show-hide" data-module="das-show-hide">
            <div class="das-filter das-!-show--from-tablet das-show-hide__section" id="events-filter" tabindex="0">
                <div class="das-filter__header">
                    <h2 class="das-filter__heading">Filter</h2>
                </div>
                @{
                    await Html.RenderPartialAsync("~/Views/Shared/_SelectedFilters.cshtml", Model.SelectedFiltersModel);
                }
                <div class="das-filter__body das-!-show--from-tablet" id="events-filter-options">
                    <form asp-route="@SharedRouteNames.NetworkEvents" method="GET">
                      <button type="submit" class="govuk-button" id="filters-submit">Apply filters</button>
                        @{
                            await Html.RenderPartialAsync("_FilterEventKeyword", Model.FilterChoices);
                            await Html.RenderPartialAsync("_FilterLocation", Model.FilterChoices);
                            await Html.RenderPartialAsync("_FilterEventDates", Model.FilterChoices);
                            await Html.RenderPartialAsync("~/Views/Shared/_FilterDetails.cshtml", Model.FilterChoices.EventFormatChecklistDetails);
                            await Html.RenderPartialAsync("~/Views/Shared/_FilterDetails.cshtml", Model.FilterChoices.EventTypeChecklistDetails);
                        }
                        <button type="submit" class="govuk-button" id="filters-submit-second">Apply filters</button>
                    </form>
                </div>
            </div>
            <button class="govuk-button das-filter__toggle das-show-hide__button govuk-visually-hidden" data-button-string="filter " data-aria-controls="events-filter" aria-expanded="true">Show filter </button>
        </div>
    </div>

    <div class="govuk-grid-column-two-thirds">
        <div class="govuk-grid-row">
            <div class="app-search-results-header">
                <h2 class="govuk-heading-m">@totalCountDescription <span class="govuk-visually-hidden">sorted by name</span></h2>
                @if (Model.ShowSortOptions)
                {
                    <form method="get" class="app-search-results-sort">
                        <label class="govuk-label" asp-for="OrderBy">Sort by</label>
                        <select class="govuk-select" asp-for="OrderBy" data-module="selectSubmit" asp-items="Model.OrderByOptions"></select>
                        <button id="SortButton" class="govuk-button govuk-button--secondary das-js-hide nonjs-sort-button" type="submit">Sort</button>
                        <partial name="_HiddenFilters" for="@Model" />
                    </form>
                }
            </div>

            <hr class="govuk-section-break govuk-section-break--visible govuk-!-margin-bottom-3 ">
            @if (Model.IsInvalidLocation)
            {
                <div class="das-search-results">
                    @{
                        await Html.RenderPartialAsync("_InvalidSearch");
                    }
                </div>
            }
            else
            {
                <div class="das-search-results">
                    @{
                        await Html.RenderPartialAsync("_CalendarEvents");
                    }
                </div>

                await Html.RenderPartialAsync("_Pagination", Model.PaginationViewModel);
            }

        </div>
    </div>
</div>