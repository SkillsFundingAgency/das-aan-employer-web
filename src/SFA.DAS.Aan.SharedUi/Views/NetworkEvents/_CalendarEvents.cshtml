﻿@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SFA.DAS.Aan.SharedUi.Models.NetworkEvents;
@using SFA.DAS.Aan.SharedUi.Extensions;
@using SFA.DAS.Aan.SharedUi.Constants;

@model NetworkEventsViewModel

@if (Model.ShowCalendarEvents)
{
    <ol class="das-search-results__list">
        @foreach (var calendarEvent in Model.CalendarEvents)
        {
            <li class="das-search-results__list-item">
                <div class="govuk-grid-row">
                    <div class="govuk-grid-column-three-quarters das-!-float-right">
                        <h2 class="govuk-heading-m das-search-results__heading">
                            <a class="das-search-results__link" href="@calendarEvent.CalendarEventLink">
                                @calendarEvent.Title
                            </a>
                        </h2>
                        <p class="govuk-body das-search-results__body">@calendarEvent.Summary</p>
                        <dl class="das-definition-list das-definition-list--inline">
                            <dt class="das-definition-list__title">Date</dt>
                            <dd class="das-definition-list__definition">@calendarEvent.Start.UtcToLocalTime().Date.ToString("d MMMM yyyy")</dd>
                            <dt class="das-definition-list__title">Time</dt>
                            <dd class="das-definition-list__definition">@calendarEvent.Start.UtcToLocalTime().ToString("h:mmtt").ToLower() - @calendarEvent.End.UtcToLocalTime().ToString("h:mmtt").ToLower()</dd>
                            <dt class="das-definition-list__title">Where</dt>
                            <dd class="das-definition-list__definition">
                                @switch (calendarEvent.EventFormat)
                                {
                                    case EventFormat.Online:
                                        <div>Online</div>
                                        break;
                                    case EventFormat.InPerson:
                                        <div>@calendarEvent.Location, @calendarEvent.Postcode</div>
                                        break;
                                    case EventFormat.Hybrid:
                                        <div>
                                            Online<br />
                                            <b>and</b><br />
                                            @calendarEvent.Location, @calendarEvent.Postcode
                                        </div>
                                        break;
                                }

                                @if (calendarEvent.EventFormat != EventFormat.Online && calendarEvent.Latitude != null && calendarEvent.Longitude != null)
                                {
                                    <a href="https://www.google.com/maps/dir//@calendarEvent.Location+@calendarEvent.Postcode" rel="noopener" target="_blank" class="govuk-link">(view map in a new window)</a>
                                }
                            </dd>
                            @if (calendarEvent.EventFormat != EventFormat.Online && calendarEvent.Distance != null)
                            {
                                <dt class="das-definition-list__title">Distance</dt>
                                <dd class="das-definition-list__definition event-distance">@calendarEvent.Distance?.ToString("0.0") miles</dd>

                            }
                            <dt class="das-definition-list__title">Event type</dt>
                            <dd class="das-definition-list__definition">@calendarEvent.CalendarName</dd>
                        </dl>
                    </div>
                    <div class="govuk-grid-column-one-quarter">
                        <div class="govuk-body app-date">
                            <span class="app-date__day">@calendarEvent.Start.Date.Day.ToString("0")</span>
                            <span class="app-date__month" aria-hidden="true">@calendarEvent.Start.Date.ToString("MMM")</span><span class="govuk-visually-hidden">@calendarEvent.Start.Date.ToString("MMMM")</span>
                        </div>
                        <strong class="govuk-tag app-tag app-tag--@calendarEvent.EventFormat.ToString()">@calendarEvent.EventFormat.GetDescription()</strong>
                        @if (calendarEvent.IsAttending)
                        {
                            <p class="app-green-tick">
                                <span class="das-icon-list__icon das-icon-list__icon--tick">Yes: </span>Signed up
                            </p>
                        }
                    </div>
                </div>
            </li>
        }
    </ol>
} else
{
<h2 class="govuk-heading-m das-search-results__heading">
    No events currently match your filters
</h2>
<div>
    <p class="govuk-body">To get more results, try:</p>
    <ul class="govuk-list govuk-list--bullet">
        <li>changing the location you've entered</li>
        <li>increasing the area of your search</li>
        <li>removing filters you've selected</li>
    </ul>
</div>
}